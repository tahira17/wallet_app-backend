{"version":3,"sources":["Components/Shared/Nav.js","Components/Welcome.js","actions/projectactions.js","actions/types.js","Components/dashboard/DashBoardItem.js","Components/dashboard/dashboard.js","Components/dashboard/dashboardoperations/CreateWallet.js","Components/dashboard/dashboardoperations/UpdateWallet.js","Components/Shared/NotFound.js","reducers/errorReducer.js","reducers/walletReducer.js","reducers/rootReducer.js","Store.js","Components/dashboard/transactions/TransactionItems.js","Components/dashboard/transactions/transaction.js","Components/dashboard/transactions/transactionoperations/AddTransaction.js","Components/dashboard/transactions/transactionoperations/updateTrans.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","id","href","Component","Welcome","getWallet","dispath","a","axios","get","then","res","payload","data","DashBoardItem","deleteBtnClick","window","confirm","props","deleteWallet","wallet","this","name","accountnumber","description","currentbalance","onClick","connect","delete","dashboard","state","nextProps","wallets","totalBal","i","length","setState","getWallets","walletComponent","map","key","aria-haspopup","aria-expanded","CreateWallet","changeHandler","event","fieldName","target","value","submitHandler","newWallet","priority","createWallet","history","preventDefault","errors","onSubmit","onChange","classnames","placeholder","post","push","catch","err","response","UpdateWallet","updateWallet","match","params","accnumber","updatedwallet","put","NotFound","class","initialState","transactions","transaction","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","TransactionItems","console","log","wallet_id","deleteTransaction","Tid","transactionDate","amount","getTransactions","updateWalletBal","income","expense","Bal","TransactionComponent","scope","walletid","AddTransaction","checkbox","checked","handleSubmit","alert","newTransaction","createTransaction","min","htmlFor","updateTrans","updateTransaction","getTransaction","Transid","App","path","component","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.13c7641c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Expense Manager\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"register.html\">\r\n                  Sign Up\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"login.html\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Expense Manager</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to manage your daily expense and hisab\r\n                  kitab\r\n                </p>\r\n                <hr />\r\n                <a href=\"register.html\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </a>\r\n                <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import axios from 'axios'\r\nimport {GET_ERRORS, GET_WALLETS,DELETE_WALLETS,GET_WALLET,GET_TRANSACTIONS,DELETE_TRANSACTION,GET_TRANSACTION} from './types'\r\n\r\nexport const createWallet = ( newWallet, history) => async dispath => {\r\n   await axios.post('/wallet',newWallet)\r\n.then((res)=>{\r\n    history.push('/dashboard')\r\n\r\n}).catch((err)=>{\r\n   dispath({type : GET_ERRORS,payload:err.response.data})\r\n})\r\n}\r\n\r\nexport const getWallets = ( ) => async dispath => {\r\n    await axios.get('/wallet')\r\n .then((res)=>{\r\n    \r\n    dispath ({type:GET_WALLETS,payload:res.data})\r\n\r\n})\r\n }\r\n\r\n export const deleteWallet = (id) => async dispath => {\r\n   await axios.delete(`/wallet/${id}`)\r\n.then((res)=>{\r\n   dispath ({type:DELETE_WALLETS,payload:id})\r\n\r\n})\r\n}\r\n\r\nexport const getWallet = ( id) => async dispath => {\r\n   await axios.get(`/wallet/${id}`)\r\n.then((res)=>{\r\n   \r\n   dispath ({type:GET_WALLET,payload:res.data})\r\n\r\n})\r\n}\r\n\r\nexport const updateWallet = (id, updatedwallet, history) => async dispath => {\r\n   await axios.put(`/wallet/${id}`,updatedwallet)\r\n.then((res)=>{\r\n    history.push('/dashboard')\r\n\r\n}).catch((err)=>{\r\n   dispath({type : GET_ERRORS,payload:err.response.data})\r\n})\r\n}\r\n\r\n\r\n///TRANSACTIONS \r\n\r\nexport const createTransaction = ( newTransaction, history, walletid) => async dispath => {\r\n   await axios.post(`/transaction/${walletid}`,newTransaction)\r\n.then((res)=>{\r\n    history.push(`/transactions/${walletid}`)\r\n\r\n}).catch((err)=>{\r\n   dispath({type : GET_ERRORS,payload:err.response.data})\r\n})\r\n}\r\n\r\n\r\nexport const getTransactions = (walletid) => async dispath => {\r\n   await axios.get(`/transaction/${walletid}`)\r\n.then((res)=>{\r\n\r\n  // alert(\"successs\")\r\n   dispath ({type:GET_TRANSACTIONS,payload:res.data})\r\n\r\n})\r\n}\r\n\r\nexport const getTransaction= (wallet_id,id) => async dispath => {\r\n   \r\n   await axios.get(`/transaction/${wallet_id}/${id}`)\r\n    .then((res) =>{\r\n\r\n       dispath({type:GET_TRANSACTION,payload:res.data})\r\n    });\r\n \r\n \r\n }\r\n\r\n\r\n\r\nexport const updateWalletBal = (id,updateWallet , history) => async dispath => {\r\n  \r\n   await axios.put(`/wallet/${id}`, updateWallet)\r\n    .then((res) =>{\r\n    }).catch((err) => {\r\n      \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n   }\r\n\r\n   export const deleteTransaction = (wallet_id,id) => async dispath => {\r\n\r\n\r\n      await axios.delete( `/transaction/${wallet_id}/${id}`)\r\n       .then((res) =>{\r\n    \r\n   \r\n          dispath({type:DELETE_TRANSACTION,payload:id})\r\n       });\r\n\r\n    }\r\n   \r\n  \r\n    export const updateTransaction = (id,wallet_id,updateTransaction , history) => async dispath => {\r\n   \r\n      await axios.put(`/transaction/${wallet_id}/${id}`, updateTransaction)\r\n      .then((res) =>{\r\n   \r\n         history.push(`/transactions/${wallet_id}`)\r\n   \r\n       }).catch((err) => {\r\n       \r\n       dispath({type:GET_ERRORS,payload:err.response.data})\r\n      \r\n       });\r\n   \r\n      }","export const GET_ERRORS = 'GET_ERRORS';\r\n\r\nexport const GET_WALLETS = 'GET_WALLETS';\r\n\r\nexport const DELETE_WALLETS = 'DELETE_WALLETS';\r\n\r\nexport const GET_WALLET = 'GET_WALLET';\r\n\r\n\r\n//Transactions\r\n\r\nexport const GET_TRANSACTION = 'GET_TRANSACTION';\r\n\r\nexport const GET_TRANSACTIONS = 'GET_TRANSACTIONS';\r\n\r\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION';\r\n\r\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION';","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {deleteWallet} from \"../../actions/projectactions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DashBoardItem extends Component {\r\n\r\n  deleteBtnClick = () => {\r\n if(window.confirm(\"ARE YOU SURE ??? \")){\r\n    this.props.deleteWallet(this.props.wallet.id);\r\n }\r\n  }\r\n\r\n\r\n  render() {\r\n    const wallet = this.props.wallet;\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4 col-md-3 col-6\">\r\n                <h3>Account Name:{wallet.name}</h3>\r\n                <p>Account Number: {wallet.accountnumber}</p>\r\n                <p>Account Description: {wallet.description}</p>\r\n              </div>\r\n              <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                <h3>Balance</h3>\r\n                <h1>Rs  : {wallet.currentbalance}</h1>\r\n                \r\n              </div>\r\n              <div className=\"col-md-4 col-12 d-lg-block\">\r\n                <ul className=\"list-group\">\r\n                  <Link to={`/transactions/${wallet.id}`}>\r\n                    <li className=\"list-group-item board text-success\">\r\n                      <i className=\"fa fa-flag-checkered pr-1\">\r\n                        {\" \"}\r\n                        View Transactions{\" \"}\r\n                      </i>\r\n                    </li>\r\n                  </Link>\r\n                  <Link to={`/updatewallet/${wallet.id}`}>\r\n                    <li className=\"list-group-item update text-info\">\r\n                      <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\r\n                    </li>\r\n                  </Link>\r\n                  <Link to=\"/dashboard\" onClick={() => this.deleteBtnClick()}>\r\n                    <li className=\"list-group-item delete text-danger\">\r\n                      <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\r\n                    </li>\r\n                  </Link>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {deleteWallet})(DashBoardItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DashBoardItem from \"./DashBoardItem\";\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getWallets} from '../../actions/projectactions'\r\n\r\nclass dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      currentbalance:0.0\r\n    }\r\n  }\r\n  \r\ncomponentWillReceiveProps(nextProps){\r\n  if(nextProps.wallets){\r\n    let totalBal = 0\r\n    \r\nfor(let i=0;i<nextProps.wallets.length;i++){\r\n  totalBal = totalBal+nextProps.wallets[i].currentbalance\r\n}\r\n\r\n    this.setState({currentbalance: totalBal})\r\n  }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\nthis.props.getWallets()\r\n\r\n}\r\n\r\n  render() {\r\nconst wallets = this.props.wallets\r\nconst walletComponent = wallets.map(wallet => (<DashBoardItem key={wallet.id} wallet = {wallet}/>))\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">My Wallets</h1>\r\n              <br />\r\n              <div className=\"btn-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info btn-lg dropdown-toggle\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Create new\r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <Link className=\"dropdown-item\" to=\"createwallet\">\r\n                    Wallet\r\n                  </Link>\r\n                </div>\r\n         \r\n              </div>\r\n                       \r\n              <br />\r\n              <div className=\"card text-center\">\r\n                <div className=\"card-header bg-success text-white\">\r\n                  <h4>Current Balance (Total)</h4>\r\n                  <h1>Rs : {this.state.currentbalance}</h1>\r\n                  \r\n                </div>\r\n              </div>\r\n              <hr />\r\n            \r\n           {walletComponent}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\nwallets : state.wallet.wallets\r\n})\r\nexport default connect(mapStateToProps,{getWallets}) (dashboard);\r\n","import React, { Component } from 'react'\r\nimport {createWallet} from '../../../actions/projectactions'\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames'\r\n\r\n class CreateWallet extends Component {\r\n\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        name : ' ',\r\n        accountnumber: ' ',\r\n        description : ' ',\r\n        priority : ' ',\r\n        errors : ' '\r\n    }\r\n}\r\n\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\nthis.setState({errors : nextProps.errors})\r\n\r\n    }\r\n}\r\n\r\nchangeHandler = (event,fieldName) =>{\r\n    this.setState({\r\n        [fieldName]: event.target.value\r\n    })\r\n}\r\n\r\nsubmitHandler = (event) => {\r\n\r\nconst newWallet={\r\n\r\n    name: this.state.name,\r\n    accountnumber : this.state.accountnumber,\r\n    description : this.state.description,\r\n    priority : this.state.priority\r\n}\r\n\r\nthis.props.createWallet(newWallet,this.props.history)\r\n\r\nevent.preventDefault()\r\n\r\n\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Create Wallet</h5>\r\n                        <hr />\r\n                        \r\n                        <form onSubmit= {(event)=> this.submitHandler(event)}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" onChange={(event)=> this.changeHandler (event, \"name\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.name })} placeholder=\"Account Name\" />\r\n                                <p className = \"text-danger \">{this.state.errors.name} </p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" onChange={(event)=> this.changeHandler (event, \"accountnumber\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.accountnumber })} placeholder=\"Account No\" />\r\n                                <p className = \"text-danger \">{this.state.errors.accountnumber} </p>                          \r\n                                </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea onChange={(event)=> this.changeHandler (event, \"description\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.description })} placeholder=\"Description\"></textarea>\r\n                                <p className = \"text-danger \">{this.state.errors.description} </p>\r\n                                </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" onChange={(event)=> this.changeHandler (event, \"priority\")} >\r\n                                    <option value={3}>Display Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                                \r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state) => ({\r\n\r\n    errors : state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{createWallet})(CreateWallet)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport {getWallet,updateWallet} from '../../../actions/projectactions'\r\nimport {Link} from 'react-router-dom'\r\n\r\n class UpdateWallet extends Component {\r\n\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        id :' ',\r\n        name : ' ',\r\n        accountnumber: ' ',\r\n        description : ' ',\r\n        priority : ' ',\r\n        currentbalance: ' ',\r\n        errors : ' '\r\n    }\r\n}\r\n\r\n\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\nthis.setState({errors : nextProps.errors})\r\n\r\n    }\r\n    if(nextProps.wallet){\r\n        this.setState({\r\n\r\n            id :nextProps.wallet.id,\r\n            name : nextProps.wallet.name,\r\n            accountnumber: nextProps.wallet.accountnumber,\r\n            description : nextProps.wallet.description,\r\n            currentbalance : nextProps.wallet.currentbalance,\r\n            priority : nextProps.wallet.priority,\r\n\r\n        })\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.props.getWallet(this.props.match.params.id)\r\n}\r\n\r\nchangeHandler = (event,fieldName) =>{\r\n    this.setState({\r\n        [fieldName]: event.target.value\r\n    })\r\n}\r\n\r\nsubmitHandler = (event) => {\r\n\r\nconst updateWallet={\r\n\r\n    name: this.state.name,\r\n    accountnumber : this.state.accountnumber,\r\n    description : this.state.description,\r\n    currentbalance : this.state.currentbalance,\r\n    priority : this.state.priority\r\n}\r\nthis.props.updateWallet(this.state.id,updateWallet,this.props.history)\r\nevent.preventDefault()\r\n\r\n\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/dashboard`} className=\"btn btn-light\">\r\n                    Back \r\n                </Link>\r\n                        <h5 className=\"display-4 text-center\">Update Your Wallet</h5>\r\n                        <hr />\r\n                        <form onSubmit= {(event)=> this.submitHandler(event)}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" value={this.state.name} onChange={(event)=> this.changeHandler (event, \"name\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.name })} />\r\n                                <p className = \"text-danger \">{this.state.errors.name} </p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"  value={this.state.accountnumber} onChange={(event)=> this.changeHandler (event, \"accountnumber\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.accountnumber })} />\r\n                                <p className = \"text-danger \">{this.state.errors.accnumber} </p>                          \r\n                                </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea  value={this.state.description} onChange={(event)=> this.changeHandler (event, \"description\")} className={classnames (\"form-control form-control-lg\",{\"is-invalid\" :this.state.errors.description })} placeholder=\"Description\"></textarea>\r\n                                <p className = \"text-danger \">{this.state.errors.description} </p>\r\n                                </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\"  value={this.state.priority} onChange={(event)=> this.changeHandler (event, \"priority\")} >\r\n                                    <option value={3}>Display Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                                \r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Update\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state) => ({\r\n\r\n    errors : state.errors,\r\n   wallet: state.wallet.wallet\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getWallet,updateWallet})(UpdateWallet)\r\n","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"error-template\">\r\n              <h1>Oops!</h1>\r\n              <h2>404 Not Found</h2>\r\n              <div class=\"error-details\">\r\n                Sorry, an error has occured, Requested page not found!\r\n              </div>\r\n              <div class=\"error-actions\">\r\n                <Link to=\"/\" class=\"btn btn-primary btn-lg\">\r\n                  <span class=\"glyphicon glyphicon-home\"></span>\r\n                  Take Me Home{\" \"}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import {GET_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state = initialState , action){\r\nswitch(action.type){\r\ncase GET_ERRORS:\r\nreturn action.payload;\r\n\r\ndefault:\r\n    return state; \r\n}\r\n\r\n}","import { GET_WALLETS, DELETE_WALLETS, GET_WALLET,GET_TRANSACTIONS,GET_TRANSACTION,DELETE_TRANSACTION } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  wallets: [],\r\n  wallet: ' ',\r\n  transactions :[],\r\n  transaction: ' ' \r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WALLETS:\r\n      return { ...state, wallets: action.payload };\r\n    case DELETE_WALLETS:\r\n      return {\r\n        ...state,wallets: state.wallets.filter((x) => x.id !== action.payload)};\r\n    case GET_WALLET:\r\n      return { ...state,wallet:action.payload};\r\n\r\n//Transactionss\r\n\r\n      case GET_TRANSACTIONS:\r\n        return { ...state, transactions: action.payload };\r\n        case GET_TRANSACTION:\r\n          return{...state, transaction: action.payload }\r\n          case  DELETE_TRANSACTION:\r\n            return { ...state, transactions: state.transactions.filter(x => x.id !== action.payload) }\r\n       \r\n          default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport walletReducer from './walletReducer';\r\n\r\nexport default combineReducers({\r\n\r\nerrors : errorReducer,\r\nwallet : walletReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nlet store;\r\n\r\n// if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n//   store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     compose(\r\n//       applyMiddleware(...middleWare),\r\n//       window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     )\r\n//   );\r\n// } else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare))\r\n  );\r\n//}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteTransaction } from '../../../actions/projectactions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n class TransactionItems extends Component {\r\n  \r\n  deleteBtnClick= () =>\r\n    {\r\n\r\n        if(window.confirm(\"ARE YOU SUREE ???\"))\r\n        {\r\n          console.log(this.props.wallet_id,this.props.transaction.id)\r\n\r\n            this.props.deleteTransaction(this.props.wallet_id,this.props.transaction.id);\r\n        }\r\n    \r\n    }\r\n  render() {\r\n\r\n  \r\n   let id = this.props.wallet_id;\r\n   let Tid =this.props.transaction.id;\r\n   \r\n    const transaction = this.props.transaction\r\n   \r\n   return (\r\n     \r\n        <tr className=\"table text-black\">\r\n        <td>{transaction.transactionDate}</td>\r\n        <td>{transaction.description}</td>\r\n        <td className=\"text-black\">{transaction.amount}</td>\r\n        <td>\r\n            <Link className=\"text-info\" to={`/trans/update/${id}/${Tid}`}><i className=\"fas fa-edit fa-2x\"></i></Link>\r\n            <Link className=\"text-danger\" to={`/transactions/${id}`} onClick={()=>this.deleteBtnClick()}><i className=\"fas fa-trash fa-2x\"></i></Link>\r\n        </td>\r\n    </tr>\r\n    \r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null,{deleteTransaction})(TransactionItems)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getTransactions, getWallet, updateWalletBal } from '../../../actions/projectactions'\r\nimport { connect } from 'react-redux'\r\nimport TransactionItems from './TransactionItems';\r\nexport class transaction extends Component {\r\n\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        id: '',\r\n        name: '',\r\n        accountnumber: '',\r\n        description: '',\r\n        priority: '',\r\n        currentbalance: '',\r\n        errors: ''\r\n    }\r\n}\r\ncomponentDidMount() {\r\n    this.props.getTransactions(this.props.match.params.id);\r\n    this.props.getWallet(this.props.match.params.id)\r\n}\r\n\r\ncomponentWillUnmount(nextProps) {\r\n\r\n\r\n    const updateWallet = {\r\n        id: this.state.id,\r\n        name: this.state.name,\r\n        accountnumber: this.state.accountnumber,\r\n        description: this.state.description,\r\n        currentbalance: this.state.currentbalance,\r\n        priority: this.state.priority\r\n    }\r\n\r\n\r\n    this.props.updateWalletBal(this.state.id, updateWallet, this.props.history)\r\n\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n\r\n\r\n\r\n    if (nextProps.transactions) {\r\n        let income = 0;\r\n        let expense = 0;\r\n        for (let i = 0; i < nextProps.transactions.length; i++) {\r\n\r\n            if (nextProps.transactions[i].type === 2) {\r\n                expense = expense + nextProps.transactions[i].amount\r\n\r\n            } else {\r\n\r\n                income = income + nextProps.transactions[i].amount\r\n            }\r\n\r\n\r\n        }\r\n\r\n        let Bal = 0;\r\n        Bal = income - expense;\r\n       \r\n        this.setState({ currentbalance: Bal })\r\n\r\n        if (nextProps.wallet) {\r\n\r\n\r\n            this.setState({\r\n                id: nextProps.wallet.id,\r\n                name: nextProps.wallet.name,\r\n                accountnumber: nextProps.wallet.accountnumber,\r\n                description: nextProps.wallet.description,\r\n\r\n                priority: nextProps.wallet.priority,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n\r\n        const transactions = this.props.transactions\r\n\r\n\r\n        const TransactionComponent = transactions.map(transaction =>\r\n            (<TransactionItems key={transaction.id} transaction={transaction} wallet_id={id} />))\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/dashboard\" className=\"btn btn-default btn-lg mb-3 text-black\">\r\n                    Back\r\n        </Link>\r\n                <Link to={`/trans/add/${id}`} className=\"btn btn-info btn-lg mb-3\">\r\n                    <i className=\"fas fa-plus-circle \"> Record new Transaction</i>\r\n                </Link>\r\n        \r\n                <br />\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header bg-success text-white\">\r\n                    <h4 className=\"text-white\">Account name : {this.state.name} </h4>\r\n                        <h2 className=\"text-white\">Account Balance</h2>\r\n                        <h1 className=\"text-white\">Rs. {this.state.currentbalance}</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th scope=\"col\">Date</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n\r\n                    <tbody>\r\n\r\n\r\n                        {TransactionComponent}\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    }\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    wallet: state.wallet.wallet,\r\n    transactions: state.wallet.transactions\r\n});\r\nexport default connect(mapStateToProps, { getTransactions, getWallet, updateWalletBal })(transaction)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {createTransaction, getWallet} from '../../../../actions/projectactions'\r\nimport { connect } from 'react-redux'\r\n\r\n class AddTransaction extends Component {\r\n\r\nconstructor(props) {\r\n\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n        currentbalance:' ',\r\n         amount : '',\r\n         description : '',\r\n         type :'1'\r\n    }\r\n\r\n    this.name = ' '\r\n}\r\n\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n\r\n    if(nextProps.wallet){\r\n        this.setState({\r\n            currentbalance : nextProps.wallet.currentbalance\r\n\r\n        })\r\n        \r\n    }\r\n    this.name = nextProps.wallet.name\r\n}\r\n\r\n \r\ncomponentDidMount() {\r\n\r\n    this.props.getWallet(this.props.match.params.id)\r\n    //getting id correctly    \r\n}\r\n\r\nchangeHandler = (event,fieldName,checkbox) =>{\r\n    this.setState({\r\n        [fieldName]: checkbox ? event.target.checked : event.target.value\r\n    })\r\n}\r\n\r\n\r\nhandleSubmit = (event) => {\r\n  \r\n    if (this.state.type === \"2\") {\r\n        if (this.state.currentbalance < this.state.amount) {\r\n            alert(\"This Account balance is not enough to make this transaction..!!!\")\r\n        }else {\r\n            let newTransaction = {\r\n                amount:this.state.amount,\r\n                description:this.state.description,\r\n                type:this.state.type\r\n            \r\n        } \r\n   \r\nthis.props.createTransaction(newTransaction,this.props.history,this.props.match.params.id)\r\n\r\n    event.preventDefault();\r\n  }\r\n}else{\r\n    let newTransaction = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        type: this.state.type\r\n    }\r\n\r\n    this.props.createTransaction(newTransaction, this.props.history, this.props.match.params.id)\r\n\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n}\r\n\r\n    render() {\r\n\r\nlet id = this.props.match.params.id;\r\nconst{amount,description,type} = this.state;\r\n\r\nconst wallet = this.props.wallet;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                            Back to Wallet\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Record New Transaction</h4>\r\n\r\n                        <h5>for account name : {wallet.name}</h5>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"number\" min=\"1\" value={amount} onChange={event=>this.changeHandler(event,\"amount\",false)} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                            </div>\r\n                          \r\n                           \r\n                            <div className=\"form-group\">\r\n                                <textarea value={description} onChange={event=>this.changeHandler(event,\"description\",false)} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input checked className=\"form-check-input\" type=\"radio\"  id=\"income\" name=\"type\" onChange={event=>this.changeHandler(event,\"type\",false)} value=\"1\"  />\r\n                                    <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input  className=\"form-check-input\" type=\"radio\"  id=\"expense\" name=\"type\" onChange={event=>this.changeHandler(event,\"type\",false)}  value=\"2\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    wallet: state.wallet.wallet,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,{createTransaction, getWallet}) (AddTransaction)\r\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { updateTransaction , getTransaction ,getWallet} from '../../../../actions/projectactions'\r\nimport { connect } from 'react-redux'\r\n\r\n class updateTrans extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            id:'',\r\n            amount: '',\r\n            description: '',\r\n            type: '1',\r\n    \r\n        }\r\n        this.name = ' '\r\n        this.transactionDate = ''\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.transaction) {\r\n            \r\n            this.setState({\r\n\r\n                id: nextProps.transaction.id,\r\n                amount: nextProps.transaction.amount,\r\n                description: nextProps.transaction.description,\r\n                type: nextProps.transaction.type,\r\n                transactionDate:nextProps.transaction.transactionDate\r\n\r\n            })\r\n        }\r\n                this.name = nextProps.wallet.name\r\n                this.transactionDate=nextProps.transaction.transactionDate\r\n\r\n                if(nextProps.wallet){\r\nthis.setState({\r\n    currentbalance : nextProps.wallet.currentbalance\r\n})\r\n\r\n                }\r\n            }\r\n        \r\n        \r\n\r\n        changeHandler = (event, fieldName) => {\r\n            this.setState({\r\n                [fieldName]: event.target.value\r\n            })\r\n        }\r\n\r\n\r\n        handleSubmit = (event) => {\r\n\r\n        if (this.state.type === \"2\") {\r\n            \r\n            if (this.state.currentbalance < this.state.amount) {\r\n                alert(\"Account balance is not enough to make this transaction..!!!\")\r\n            }else {\r\n    \r\n        let updateTransaction = {\r\n            amount:this.state.amount,\r\n            description:this.state.description,\r\n            type:this.state.type,\r\n            transactionDate:this.transactionDate\r\n        \r\n    }\r\n    this.props.updateTransaction(this.state.id,this.props.match.params.id,updateTransaction, this.props.history)\r\n    \r\n        event.preventDefault();\r\n      }\r\n    }else{\r\n        let updateTransaction = {\r\n            id:this.state.id,\r\n            amount: this.state.amount,\r\n            description: this.state.description,\r\n            type: this.state.type,\r\n            transactionDate:this.transactionDate\r\n        }\r\n    \r\n        this.props.updateTransaction(this.state.id,this.props.match.params.id,updateTransaction, this.props.history)\r\n    \r\n    \r\n        event.preventDefault();\r\n    \r\n        \r\n    }\r\n}\r\n\r\n        componentDidMount() {\r\n            this.props.getTransaction(this.props.match.params.id, this.props.match.params.Transid)\r\n            this.props.getWallet(this.props.match.params.id)\r\n        }\r\n\r\n    render() {\r\n        const wallet = this.props.wallet;\r\n        let id = this.props.match.params.id;\r\n        const { amount, description,type } = this.state;\r\n      \r\n        return (\r\n\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                            Back to Wallet\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Update Transaction</h4>\r\n                        <h2>For Account Name : {wallet.name}</h2>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"number\" min=\"1\" value={amount} onChange={event=>this.changeHandler(event,\"amount\",false)} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea value={description} onChange={event=>this.changeHandler(event,\"description\",false)} className=\"form-control form-control-lg\" placeholder=\"Description\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input checked className=\"form-check-input\" type=\"radio\"  id=\"income\" name=\"type\" onChange={event=>this.changeHandler(event,\"type\",false)} value=\"1\"  />\r\n                                    <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input  className=\"form-check-input\" type=\"radio\"  id=\"expense\" name=\"type\" onChange={event=>this.changeHandler(event,\"type\",false)}  value=\"2\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors,\r\n    transaction: state.wallet.transaction,\r\n    wallet: state.wallet.wallet\r\n\r\n});\r\nexport default connect(mapStateToProps, {updateTransaction, getTransaction ,getWallet})(updateTrans)\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./Components/Shared/Nav\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Welcome from \"./Components/Welcome\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport dashboard from \"./Components/dashboard/dashboard\";\nimport CreateWallet from \"./Components/dashboard/dashboardoperations/CreateWallet\";\nimport UpdateWallet from \"./Components/dashboard/dashboardoperations/UpdateWallet\";\nimport NotFound from \"./Components/Shared/NotFound\";\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport transaction from \"./Components/dashboard/transactions/transaction\";\nimport AddTransaction from \"./Components/dashboard/transactions/transactionoperations/AddTransaction\";\nimport updateTrans from \"./Components/dashboard/transactions/transactionoperations/updateTrans\";\nimport 'react-app-polyfill/stable'\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={Nav} />\n      <Switch>\n        <Route path=\"/\" exact component={Welcome} />\n        <Route path=\"/dashboard\" exact component={dashboard} /> \n\n        <Route path=\"/createwallet\" exact component={CreateWallet} />   \n       \n        <Route path=\"/updatewallet/:id\" exact component={UpdateWallet} />   \n       \n        <Route path=\"/transactions/:id\" exact component={transaction} />   \n\n<Route path=\"/trans/add/:id\" exact component={AddTransaction}/>\n\n<Route path=\"/trans/update/:id/:Transid\" exact component={updateTrans}/>\n\n       <Route path=\"/\" component ={NotFound} />\n        </Switch>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}